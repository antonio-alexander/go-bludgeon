name: healthcheck_push

on:
  push:
    branches:
      - main
    paths:
      - "healthcheck/**"

env:
  FOLDER_NAME: "healthcheck"
  DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository }}-healthcheck
  GO_LINT_VERSION: "v1.59.0"
  GO_VERSION: "1.21"
  GO_CACHE_DEPENDENCY_PATHS: |
    healthcheck/go.sum
  PROTOC_VERSION: "3.20.1"
  PROTOC_GEN_GO_VERSION: "v1.28.0"
  PROTOC_GEN_GO_GRPC_VERSION: "v1.2"
  PROTO_LINT_VERSION: "0.50.5"
  LINTER_VERSION: "v1.59.0"
  PLATFORM_AMD64: linux/amd64
  PLATFORM_ARMV7: linux/arm/v7
  RETENTION_DAYS: 7
  DEFAULT_BRANCH: main

jobs:
  environment:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.environment.outputs.version_source }}
      git_source: ${{ steps.environment.outputs.git_source }}
      git_sha: ${{ steps.environment.outputs.git_sha }}
    steps:
      - uses: antonio-alexander/go-bludgeon/.github/actions/environment@v1
        id: environment
        with:
          folder-name: ${{ env.FOLDER_NAME }}

  go_lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - uses: antonio-alexander/go-bludgeon/.github/actions/go_lint@v1
        with:
          folder-name: ${{ env.FOLDER_NAME }}
          golang-version: ${{ env.GO_VERSION}}
          golang-cache-dependency-paths: ${{ env.GO_CACHE_DEPENDENCY_PATHS}}
          linter-version: ${{ env.LINTER_VERSION}}

  proto_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: antonio-alexander/go-bludgeon/.github/actions/proto_lint@v1
        with:
          folder-name: ${{ env.FOLDER_NAME }}
          golang-version: ${{ env.GO_VERSION}}
          golang-cache-dependency-paths: ${{ env.GO_CACHE_DEPENDENCY_PATHS}}
          proto-pattern: ./data/pb/*.proto
          proto-lint-version: ${{ env.PROTO_LINT_VERSION }}
          proto-lint-logging-level: error
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: proto_lint
          path: |
            ${{ steps.proto_lint.outputs.proto_lint_log_file }}

  proto_validate:
    needs: [proto_lint]
    runs-on: ubuntu-latest
    steps:
      - uses: antonio-alexander/go-bludgeon/.github/actions/proto_validate@v1
        with:
          folder-name: ${{ env.FOLDER_NAME }}
          golang-version: ${{ env.GO_VERSION}}
          golang-cache-dependency-paths: ${{ env.GO_CACHE_DEPENDENCY_PATHS}}
          protoc-version: ${{ env.PROTOC_VERSION }}
          protoc-gen-go-version: ${{ env.PROTOC_GEN_GO_VERSION }}
          protoc-gen-go-grpc-version: ${{ env.PROTOC_GEN_GO_GRPC_VERSION }}
          proto-folder: ./data

      - name: Compare healthcheck.pb.go
        if: always()
        working-directory: /home/runner/work/go-bludgeon/go-bludgeon/healthcheck/data/pb/
        run: |
          if cmp --silent -- "./healthcheck.pb.go" "/tmp/healthcheck.pb.go"; then
            echo "generated proto files are identical"
          else
            echo "one or more proto files generated don't match"
            exit 1
          fi
      - name: Compare healthcheck_grpc.pb.go
        if: always()
        working-directory: /home/runner/work/go-bludgeon/go-bludgeon/healthcheck/data/pb/
        run: |
          if cmp --silent -- "./healthcheck_grpc.pb.go" "/tmp/healthcheck_grpc.pb.go"; then
            echo "generated proto files are identical"
          else
            echo "one or more proto files generated don't match"
            exit 1
          fi
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: proto_validate
          path: |
            /tmp/healthcheck.pb.go
            /tmp/healthcheck_grpc.pb.go

  go_test:
    needs: [go_lint, proto_validate]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - uses: antonio-alexander/go-bludgeon/.github/actions/go_test@v1
        with:
          folder-name: ${{ env.FOLDER_NAME }}
          test-folders: ./logic/... ./service/...
          golang-version: ${{ env.GO_VERSION}}
          golang-cache-dependency-paths: ${{ env.GO_CACHE_DEPENDENCY_PATHS}}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: go_test
          path: |
            /home/runner/work/go-bludgeon/go-bludgeon/healthcheck/tmp/test_healthcheck.log
            /home/runner/work/go-bludgeon/go-bludgeon/healthcheck/tmp/test_healthcheck.out

  docker_build_amd64:
    needs: [environment, go_test, proto_validate]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    outputs:
      docker_image: ${{ steps.docker_build.outputs.docker_image }}
      docker_image_file: ${{ steps.docker_build.outputs.docker_image_file }}
    steps:
      - uses: antonio-alexander/go-bludgeon/.github/actions/docker_build@v1
        id: docker_build
        with:
          folder-name: ${{ env.FOLDER_NAME }}
          docker-file: ./cmd/healthcheck-service/Dockerfile
          docker-platform: ${{ env.PLATFORM_AMD64 }}
          docker-image-name: ${{ env.DOCKER_IMAGE_NAME }}
          docker-image-file: healthcheck
          docker-tag-prefix: amd64
          version: ${{ needs.environment.outputs.version }}
          git-source: ${{ needs.environment.outputs.git_source }}
          git-sha: ${{ needs.environment.outputs.git_sha }}
          go-arch: amd64
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docker_build_amd64
          path: |
            ${{ steps.docker_build.outputs.docker_build_log }}
            ${{ steps.docker_build.outputs.docker_image_file }}
          retention-days: ${{ env.RETENTION_DAYS }}

  docker_build_armv7:
    needs: [environment, go_test, proto_validate]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    outputs:
      docker_image: ${{ steps.docker_build.outputs.docker_image }}
      docker_image_file: ${{ steps.docker_build.outputs.docker_image_file }}
    steps:
      - uses: antonio-alexander/go-bludgeon/.github/actions/docker_build@v1
        id: docker_build
        with:
          folder-name: ${{ env.FOLDER_NAME }}
          docker-file: ./cmd/healthcheck-service/Dockerfile
          docker-platform: ${{ env.PLATFORM_ARMV7 }}
          docker-image-name: ${{ env.DOCKER_IMAGE_NAME }}
          docker-image-file: healthcheck
          docker-tag-prefix: armv7
          version: ${{ needs.environment.outputs.version }}
          git-source: ${{ needs.environment.outputs.git_source }}
          git-sha: ${{ needs.environment.outputs.git_sha }}
          go-arch: arm
          go-arm: 7
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docker_build_armv7
          path: |
            ${{ steps.docker_build.outputs.docker_build_log }}
            ${{ steps.docker_build.outputs.docker_image_file }}
          retention-days: ${{ env.RETENTION_DAYS }}

  go_test_client:
    needs: [docker_build_amd64, docker_build_armv7]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docker_build_amd64
          path: /tmp
      - name: Load Docker Images
        run: |
          docker load -i ${{ needs.docker_build_amd64.outputs.docker_image_file }}
          docker tag ${{ needs.docker_build_amd64.outputs.docker_image }} ${{ env.DOCKER_IMAGE_NAME }}:latest
      - uses: antonio-alexander/go-bludgeon/.github/actions/go_test@v1
        with:
          folder-name: ${{ env.FOLDER_NAME }}
          test-folders: ./client/...
          golang-version: ${{ env.GO_VERSION}}
          golang-cache-dependency-paths: ${{ env.GO_CACHE_DEPENDENCY_PATHS}}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: go_test_client
          path: |
            /home/runner/work/go-bludgeon/go-bludgeon/healthcheck/tmp/test_healthcheck.log
            /home/runner/work/go-bludgeon/go-bludgeon/healthcheck/tmp/test_healthcheck.out

  git_push_tag:
    needs: [environment, go_test_client]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: antonio-alexander/go-bludgeon/.github/actions/git_tag@v1
        with:
          tag: healthcheck/v${{ needs.environment.outputs.version }}
