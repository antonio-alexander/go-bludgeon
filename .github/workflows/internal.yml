name: internal

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "internal/**"
      - ".github/workflows/internal.yml"
  pull_request:
    paths:
      - "internal/**"
      - ".github/workflows/internal.yml"

jobs:
  environment:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      GITHUB_HEAD_REF: ${{ github.head_ref }}
      GITHUB_BASE_REF: ${{ github.base_ref }}
    steps:
      - name: Checkout repository code (source)
        uses: actions/checkout@v2
      - name: Get source version
        run: |
          version_source=`cat /home/runner/work/go-bludgeon/go-bludgeon/version.json | jq '.Version' | sed 's/"//g'`
          echo $version_source
          echo "version_source=$version_source" >> $GITHUB_ENV
      - name: Checkout repository code (target)
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}
      - name: Get target version
        run: |
          version_source=`cat /home/runner/work/go-bludgeon/go-bludgeon/version.json | jq '.Version' | sed 's/"//g'`
          echo $version_target
          echo "version_target=$version_target" >> $GITHUB_ENV
      - name: Generate build artifacts
        run: |
          mkdir -p /tmp
          echo ${{ env.version_source }} >> /tmp/version_source
          echo ${{ env.version_target }} >> /tmp/version_target
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            /tmp/version_source
            /tmp/version_target

  go_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.16
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.44.2
          working-directory: ./internal
          args: --verbose

  go_test:
    needs: [go_lint]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Test timers (exclude client)
        run: |
          cd /home/runner/work/go-bludgeon/go-bludgeon/internal
          go mod download
          go test -v ./... -coverprofile /tmp/go-bludgeon-internal.out | tee /tmp/go-bludgeon-internal.log
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            /tmp/go-bludgeon-internal.log
            /tmp/go-bludgeon-internal.out

  version_validate:
    if: github.base_ref == 'refs/heads/main'
    needs: [environment]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: /tmp
      - name: Get environment
        run: |
          version_source=`cat /tmp/version_source`
          echo "version_source=$version_source" >> $GITHUB_ENV
          version_target=`cat /tmp/version_target`
          echo "version_target=$version_target" >> $GITHUB_ENV
      - name: Compare versions
        run: |
          echo "Comparing version \"${{ env.version_source }}\" to target version \"${{ env.version_target }}\""
          if [ "${{ env.version_source }}" = "${{ env.version_target }}" ]; then
               echo "versions are the same, versions must be different"
               exit 1
          fi

  git_push_tag:
    if: ${{ always() &&
      (github.ref == 'refs/heads/develop' || github.event_name == 'release' || github.ref == 'refs/heads/main') &&
      (needs.go_test.result=='success' && needs.go_lint.result=='success' && needs.environment.result=='success') }}
    needs: [environment, go_test, go_lint]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: /tmp
      - name: Get environment
        run: |
          version=`cat /tmp/version_source`
          echo "version=$version" >> $GITHUB_ENV
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Push/Update version
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          CUSTOM_TAG: internal/v${{ env.version }}
