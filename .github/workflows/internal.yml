name: internal

on:
  push:
    branches:
      - master
      - develop
    paths:
      - "internal/**"
      - ".github/workflows/internal.yml"
  pull_request:
    paths:
      - "internal/**"
      - ".github/workflows/internal.yml"
  release:
    types: [published]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  GITHUB_BASE_REF: ${{ github.base_ref }}
  PLATFORM_AMD64: linux/amd64
  PLATFORM_ARMV7: linux/arm/v7

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Get version
        run: |
          version=`cat /home/runner/work/go-bludgeon/go-bludgeon/internal/version.json | jq '.Version' | sed 's/"//g'`
          echo "version=$version" >> $GITHUB_ENV
      - name: Generate build artifacts
        run: |
          mkdir -p /tmp
          echo ${{ env.version }} >> /tmp/version
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            /tmp/version

  version_validate:
    if: github.event_name == 'pull_request' && github.base_ref == 'refs/heads/main'
    needs: version
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: /tmp
      - name: Get version
        run: |
          version=`cat /tmp/version`
          echo "version=$version" >> $GITHUB_ENV
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}
      - name: Get base version
        run: |
          base_version=`cat /home/runner/work/go-bludgeon/go-bludgeon/internal/version.json | jq '.Version' | sed 's/"//g'`
          echo "base_version=$base_version" >> $GITHUB_ENV
      - name: Compare versions
        run: |
          echo "Comparing version \"$version\" to base version \"$base_version\""
          if [ "$version" = "$base_version" ]; then
               echo "versions equal, verions must be different"
               exit 1
          fi

  go_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.16
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.44.2
          working-directory: ./internal
          args: --verbose

  go_test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: test internal
        run: |
          cd /home/runner/work/go-bludgeon/go-bludgeon/internal
          go mod download
          go test -v ./... -coverprofile /tmp/go-bludgeon-internal.out | tee /tmp/go-bludgeon-internal.log
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            /tmp/go-bludgeon-internal.log
            /tmp/go-bludgeon-internal.out

  git_tag_push:
    if: github.ref == 'refs/heads/develop' || github.event_name == 'release' || github.ref == 'refs/heads/main'
    needs: [go_test, go_lint]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: /tmp
      - name: Get version
        run: |
          version=`cat /tmp/version`
          echo "version=$version" >> $GITHUB_ENV
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Push/Update version
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          CUSTOM_TAG: internal/v${{ env.version }}
