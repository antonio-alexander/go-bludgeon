//
//go_bludgeon_timers defines a set of types for use with the timers service

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: timers.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TimerCreateRequest
type TimerCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timer_partial
	TimerPartial *TimerPartial `protobuf:"bytes,1,opt,name=timer_partial,json=timerPartial,proto3" json:"timer_partial,omitempty"`
}

func (x *TimerCreateRequest) Reset() {
	*x = TimerCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerCreateRequest) ProtoMessage() {}

func (x *TimerCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerCreateRequest.ProtoReflect.Descriptor instead.
func (*TimerCreateRequest) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{0}
}

func (x *TimerCreateRequest) GetTimerPartial() *TimerPartial {
	if x != nil {
		return x.TimerPartial
	}
	return nil
}

// TimerCreateResponse
type TimerCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timer
	Timer *Timer `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
}

func (x *TimerCreateResponse) Reset() {
	*x = TimerCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerCreateResponse) ProtoMessage() {}

func (x *TimerCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerCreateResponse.ProtoReflect.Descriptor instead.
func (*TimerCreateResponse) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{1}
}

func (x *TimerCreateResponse) GetTimer() *Timer {
	if x != nil {
		return x.Timer
	}
	return nil
}

// TimerReadRequest
type TimerReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TimerReadRequest) Reset() {
	*x = TimerReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerReadRequest) ProtoMessage() {}

func (x *TimerReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerReadRequest.ProtoReflect.Descriptor instead.
func (*TimerReadRequest) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{2}
}

func (x *TimerReadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// TimerReadResponse
type TimerReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timer
	Timer *Timer `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
}

func (x *TimerReadResponse) Reset() {
	*x = TimerReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerReadResponse) ProtoMessage() {}

func (x *TimerReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerReadResponse.ProtoReflect.Descriptor instead.
func (*TimerReadResponse) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{3}
}

func (x *TimerReadResponse) GetTimer() *Timer {
	if x != nil {
		return x.Timer
	}
	return nil
}

// TimerUpdateRequest
type TimerUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// timer_partial
	TimerPartial *TimerPartial `protobuf:"bytes,2,opt,name=timer_partial,json=timerPartial,proto3" json:"timer_partial,omitempty"`
}

func (x *TimerUpdateRequest) Reset() {
	*x = TimerUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerUpdateRequest) ProtoMessage() {}

func (x *TimerUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerUpdateRequest.ProtoReflect.Descriptor instead.
func (*TimerUpdateRequest) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{4}
}

func (x *TimerUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TimerUpdateRequest) GetTimerPartial() *TimerPartial {
	if x != nil {
		return x.TimerPartial
	}
	return nil
}

// TimerUpdateResponse
type TimerUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timer
	Timer *Timer `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
}

func (x *TimerUpdateResponse) Reset() {
	*x = TimerUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerUpdateResponse) ProtoMessage() {}

func (x *TimerUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerUpdateResponse.ProtoReflect.Descriptor instead.
func (*TimerUpdateResponse) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{5}
}

func (x *TimerUpdateResponse) GetTimer() *Timer {
	if x != nil {
		return x.Timer
	}
	return nil
}

// TimerDeleteRequest
type TimerDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TimerDeleteRequest) Reset() {
	*x = TimerDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerDeleteRequest) ProtoMessage() {}

func (x *TimerDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerDeleteRequest.ProtoReflect.Descriptor instead.
func (*TimerDeleteRequest) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{6}
}

func (x *TimerDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// TimerDeleteResponse
type TimerDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TimerDeleteResponse) Reset() {
	*x = TimerDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerDeleteResponse) ProtoMessage() {}

func (x *TimerDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerDeleteResponse.ProtoReflect.Descriptor instead.
func (*TimerDeleteResponse) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{7}
}

// TimersReadRequest
type TimersReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timer_search
	TimerSearch *TimerSearch `protobuf:"bytes,1,opt,name=timer_search,json=timerSearch,proto3" json:"timer_search,omitempty"`
}

func (x *TimersReadRequest) Reset() {
	*x = TimersReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimersReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimersReadRequest) ProtoMessage() {}

func (x *TimersReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimersReadRequest.ProtoReflect.Descriptor instead.
func (*TimersReadRequest) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{8}
}

func (x *TimersReadRequest) GetTimerSearch() *TimerSearch {
	if x != nil {
		return x.TimerSearch
	}
	return nil
}

// TimersReadResponse
type TimersReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timers
	Timers []*Timer `protobuf:"bytes,1,rep,name=timers,proto3" json:"timers,omitempty"`
}

func (x *TimersReadResponse) Reset() {
	*x = TimersReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimersReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimersReadResponse) ProtoMessage() {}

func (x *TimersReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimersReadResponse.ProtoReflect.Descriptor instead.
func (*TimersReadResponse) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{9}
}

func (x *TimersReadResponse) GetTimers() []*Timer {
	if x != nil {
		return x.Timers
	}
	return nil
}

// TimerStartRequest
type TimerStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TimerStartRequest) Reset() {
	*x = TimerStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerStartRequest) ProtoMessage() {}

func (x *TimerStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerStartRequest.ProtoReflect.Descriptor instead.
func (*TimerStartRequest) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{10}
}

func (x *TimerStartRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// TimerStartResponse
type TimerStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timer
	Timer *Timer `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
}

func (x *TimerStartResponse) Reset() {
	*x = TimerStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerStartResponse) ProtoMessage() {}

func (x *TimerStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerStartResponse.ProtoReflect.Descriptor instead.
func (*TimerStartResponse) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{11}
}

func (x *TimerStartResponse) GetTimer() *Timer {
	if x != nil {
		return x.Timer
	}
	return nil
}

// TimerStopRequest
type TimerStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TimerStopRequest) Reset() {
	*x = TimerStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerStopRequest) ProtoMessage() {}

func (x *TimerStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerStopRequest.ProtoReflect.Descriptor instead.
func (*TimerStopRequest) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{12}
}

func (x *TimerStopRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// TimerStopResponse
type TimerStopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timer
	Timer *Timer `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
}

func (x *TimerStopResponse) Reset() {
	*x = TimerStopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerStopResponse) ProtoMessage() {}

func (x *TimerStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerStopResponse.ProtoReflect.Descriptor instead.
func (*TimerStopResponse) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{13}
}

func (x *TimerStopResponse) GetTimer() *Timer {
	if x != nil {
		return x.Timer
	}
	return nil
}

// TimerSubmitRequest
type TimerSubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// fnish_oneof
	//
	// Types that are assignable to FinishOneof:
	//
	//	*TimerSubmitRequest_Finish
	FinishOneof isTimerSubmitRequest_FinishOneof `protobuf_oneof:"finish_oneof"`
}

func (x *TimerSubmitRequest) Reset() {
	*x = TimerSubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerSubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerSubmitRequest) ProtoMessage() {}

func (x *TimerSubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerSubmitRequest.ProtoReflect.Descriptor instead.
func (*TimerSubmitRequest) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{14}
}

func (x *TimerSubmitRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *TimerSubmitRequest) GetFinishOneof() isTimerSubmitRequest_FinishOneof {
	if m != nil {
		return m.FinishOneof
	}
	return nil
}

func (x *TimerSubmitRequest) GetFinish() int64 {
	if x, ok := x.GetFinishOneof().(*TimerSubmitRequest_Finish); ok {
		return x.Finish
	}
	return 0
}

type isTimerSubmitRequest_FinishOneof interface {
	isTimerSubmitRequest_FinishOneof()
}

type TimerSubmitRequest_Finish struct {
	// finish
	Finish int64 `protobuf:"varint,2,opt,name=finish,proto3,oneof"`
}

func (*TimerSubmitRequest_Finish) isTimerSubmitRequest_FinishOneof() {}

// TimerSubmitResponse
type TimerSubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timer
	Timer *Timer `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
}

func (x *TimerSubmitResponse) Reset() {
	*x = TimerSubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerSubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerSubmitResponse) ProtoMessage() {}

func (x *TimerSubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerSubmitResponse.ProtoReflect.Descriptor instead.
func (*TimerSubmitResponse) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{15}
}

func (x *TimerSubmitResponse) GetTimer() *Timer {
	if x != nil {
		return x.Timer
	}
	return nil
}

// TimerUpdateCommentRequest
type TimerUpdateCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// comment
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *TimerUpdateCommentRequest) Reset() {
	*x = TimerUpdateCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerUpdateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerUpdateCommentRequest) ProtoMessage() {}

func (x *TimerUpdateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerUpdateCommentRequest.ProtoReflect.Descriptor instead.
func (*TimerUpdateCommentRequest) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{16}
}

func (x *TimerUpdateCommentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TimerUpdateCommentRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

// TimerUpdateCommentResponse
type TimerUpdateCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timer
	Timer *Timer `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
}

func (x *TimerUpdateCommentResponse) Reset() {
	*x = TimerUpdateCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerUpdateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerUpdateCommentResponse) ProtoMessage() {}

func (x *TimerUpdateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerUpdateCommentResponse.ProtoReflect.Descriptor instead.
func (*TimerUpdateCommentResponse) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{17}
}

func (x *TimerUpdateCommentResponse) GetTimer() *Timer {
	if x != nil {
		return x.Timer
	}
	return nil
}

// TimerArchiveRequest
type TimerArchiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// archive
	Archive bool `protobuf:"varint,2,opt,name=archive,proto3" json:"archive,omitempty"`
}

func (x *TimerArchiveRequest) Reset() {
	*x = TimerArchiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerArchiveRequest) ProtoMessage() {}

func (x *TimerArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerArchiveRequest.ProtoReflect.Descriptor instead.
func (*TimerArchiveRequest) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{18}
}

func (x *TimerArchiveRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TimerArchiveRequest) GetArchive() bool {
	if x != nil {
		return x.Archive
	}
	return false
}

// TimerArchiveResponse
type TimerArchiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timer
	Timer *Timer `protobuf:"bytes,1,opt,name=timer,proto3" json:"timer,omitempty"`
}

func (x *TimerArchiveResponse) Reset() {
	*x = TimerArchiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerArchiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerArchiveResponse) ProtoMessage() {}

func (x *TimerArchiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerArchiveResponse.ProtoReflect.Descriptor instead.
func (*TimerArchiveResponse) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{19}
}

func (x *TimerArchiveResponse) GetTimer() *Timer {
	if x != nil {
		return x.Timer
	}
	return nil
}

// TimerSearch
type TimerSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// employee_id_oneof
	//
	// Types that are assignable to EmployeeIdOneof:
	//
	//	*TimerSearch_EmployeeId
	EmployeeIdOneof isTimerSearch_EmployeeIdOneof `protobuf_oneof:"employee_id_oneof"`
	// employee_ids
	EmployeeIds []string `protobuf:"bytes,2,rep,name=employee_ids,json=employeeIds,proto3" json:"employee_ids,omitempty"`
	// completed_oneof
	//
	// Types that are assignable to CompletedOneof:
	//
	//	*TimerSearch_Completed
	CompletedOneof isTimerSearch_CompletedOneof `protobuf_oneof:"completed_oneof"`
	// archived_oneof
	//
	// Types that are assignable to ArchivedOneof:
	//
	//	*TimerSearch_Archived
	ArchivedOneof isTimerSearch_ArchivedOneof `protobuf_oneof:"archived_oneof"`
	// ids
	Ids []string `protobuf:"bytes,5,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *TimerSearch) Reset() {
	*x = TimerSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerSearch) ProtoMessage() {}

func (x *TimerSearch) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerSearch.ProtoReflect.Descriptor instead.
func (*TimerSearch) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{20}
}

func (m *TimerSearch) GetEmployeeIdOneof() isTimerSearch_EmployeeIdOneof {
	if m != nil {
		return m.EmployeeIdOneof
	}
	return nil
}

func (x *TimerSearch) GetEmployeeId() string {
	if x, ok := x.GetEmployeeIdOneof().(*TimerSearch_EmployeeId); ok {
		return x.EmployeeId
	}
	return ""
}

func (x *TimerSearch) GetEmployeeIds() []string {
	if x != nil {
		return x.EmployeeIds
	}
	return nil
}

func (m *TimerSearch) GetCompletedOneof() isTimerSearch_CompletedOneof {
	if m != nil {
		return m.CompletedOneof
	}
	return nil
}

func (x *TimerSearch) GetCompleted() bool {
	if x, ok := x.GetCompletedOneof().(*TimerSearch_Completed); ok {
		return x.Completed
	}
	return false
}

func (m *TimerSearch) GetArchivedOneof() isTimerSearch_ArchivedOneof {
	if m != nil {
		return m.ArchivedOneof
	}
	return nil
}

func (x *TimerSearch) GetArchived() bool {
	if x, ok := x.GetArchivedOneof().(*TimerSearch_Archived); ok {
		return x.Archived
	}
	return false
}

func (x *TimerSearch) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type isTimerSearch_EmployeeIdOneof interface {
	isTimerSearch_EmployeeIdOneof()
}

type TimerSearch_EmployeeId struct {
	// employee_id
	EmployeeId string `protobuf:"bytes,1,opt,name=employee_id,json=employeeId,proto3,oneof"`
}

func (*TimerSearch_EmployeeId) isTimerSearch_EmployeeIdOneof() {}

type isTimerSearch_CompletedOneof interface {
	isTimerSearch_CompletedOneof()
}

type TimerSearch_Completed struct {
	// completed
	Completed bool `protobuf:"varint,3,opt,name=completed,proto3,oneof"`
}

func (*TimerSearch_Completed) isTimerSearch_CompletedOneof() {}

type isTimerSearch_ArchivedOneof interface {
	isTimerSearch_ArchivedOneof()
}

type TimerSearch_Archived struct {
	// archived
	Archived bool `protobuf:"varint,4,opt,name=archived,proto3,oneof"`
}

func (*TimerSearch_Archived) isTimerSearch_ArchivedOneof() {}

// TimerPartial
type TimerPartial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// completed_oneof
	//
	// Types that are assignable to CompletedOneof:
	//
	//	*TimerPartial_Completed
	CompletedOneof isTimerPartial_CompletedOneof `protobuf_oneof:"completed_oneof"`
	// archived_oneof
	//
	// Types that are assignable to ArchivedOneof:
	//
	//	*TimerPartial_Archived
	ArchivedOneof isTimerPartial_ArchivedOneof `protobuf_oneof:"archived_oneof"`
	// employee_id_oneof
	//
	// Types that are assignable to EmployeeIdOneof:
	//
	//	*TimerPartial_EmployeeId
	EmployeeIdOneof isTimerPartial_EmployeeIdOneof `protobuf_oneof:"employee_id_oneof"`
	// comment_oneof
	//
	// Types that are assignable to CommentOneof:
	//
	//	*TimerPartial_Comment
	CommentOneof isTimerPartial_CommentOneof `protobuf_oneof:"comment_oneof"`
	// finish_oneof
	//
	// Types that are assignable to FinishOneof:
	//
	//	*TimerPartial_Finish
	FinishOneof isTimerPartial_FinishOneof `protobuf_oneof:"finish_oneof"`
}

func (x *TimerPartial) Reset() {
	*x = TimerPartial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimerPartial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerPartial) ProtoMessage() {}

func (x *TimerPartial) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerPartial.ProtoReflect.Descriptor instead.
func (*TimerPartial) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{21}
}

func (m *TimerPartial) GetCompletedOneof() isTimerPartial_CompletedOneof {
	if m != nil {
		return m.CompletedOneof
	}
	return nil
}

func (x *TimerPartial) GetCompleted() bool {
	if x, ok := x.GetCompletedOneof().(*TimerPartial_Completed); ok {
		return x.Completed
	}
	return false
}

func (m *TimerPartial) GetArchivedOneof() isTimerPartial_ArchivedOneof {
	if m != nil {
		return m.ArchivedOneof
	}
	return nil
}

func (x *TimerPartial) GetArchived() bool {
	if x, ok := x.GetArchivedOneof().(*TimerPartial_Archived); ok {
		return x.Archived
	}
	return false
}

func (m *TimerPartial) GetEmployeeIdOneof() isTimerPartial_EmployeeIdOneof {
	if m != nil {
		return m.EmployeeIdOneof
	}
	return nil
}

func (x *TimerPartial) GetEmployeeId() string {
	if x, ok := x.GetEmployeeIdOneof().(*TimerPartial_EmployeeId); ok {
		return x.EmployeeId
	}
	return ""
}

func (m *TimerPartial) GetCommentOneof() isTimerPartial_CommentOneof {
	if m != nil {
		return m.CommentOneof
	}
	return nil
}

func (x *TimerPartial) GetComment() string {
	if x, ok := x.GetCommentOneof().(*TimerPartial_Comment); ok {
		return x.Comment
	}
	return ""
}

func (m *TimerPartial) GetFinishOneof() isTimerPartial_FinishOneof {
	if m != nil {
		return m.FinishOneof
	}
	return nil
}

func (x *TimerPartial) GetFinish() int64 {
	if x, ok := x.GetFinishOneof().(*TimerPartial_Finish); ok {
		return x.Finish
	}
	return 0
}

type isTimerPartial_CompletedOneof interface {
	isTimerPartial_CompletedOneof()
}

type TimerPartial_Completed struct {
	// completed_oneof
	Completed bool `protobuf:"varint,1,opt,name=completed,proto3,oneof"`
}

func (*TimerPartial_Completed) isTimerPartial_CompletedOneof() {}

type isTimerPartial_ArchivedOneof interface {
	isTimerPartial_ArchivedOneof()
}

type TimerPartial_Archived struct {
	// archived
	Archived bool `protobuf:"varint,2,opt,name=archived,proto3,oneof"`
}

func (*TimerPartial_Archived) isTimerPartial_ArchivedOneof() {}

type isTimerPartial_EmployeeIdOneof interface {
	isTimerPartial_EmployeeIdOneof()
}

type TimerPartial_EmployeeId struct {
	// employee_id
	EmployeeId string `protobuf:"bytes,3,opt,name=employee_id,json=employeeId,proto3,oneof"`
}

func (*TimerPartial_EmployeeId) isTimerPartial_EmployeeIdOneof() {}

type isTimerPartial_CommentOneof interface {
	isTimerPartial_CommentOneof()
}

type TimerPartial_Comment struct {
	// comment
	Comment string `protobuf:"bytes,4,opt,name=comment,proto3,oneof"`
}

func (*TimerPartial_Comment) isTimerPartial_CommentOneof() {}

type isTimerPartial_FinishOneof interface {
	isTimerPartial_FinishOneof()
}

type TimerPartial_Finish struct {
	// finish
	Finish int64 `protobuf:"varint,5,opt,name=finish,proto3,oneof"`
}

func (*TimerPartial_Finish) isTimerPartial_FinishOneof() {}

// Timer
type Timer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// completed
	Completed bool `protobuf:"varint,1,opt,name=completed,proto3" json:"completed,omitempty"`
	// archived
	Archived bool `protobuf:"varint,2,opt,name=archived,proto3" json:"archived,omitempty"`
	// start
	Start int64 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	// finish
	Finish int64 `protobuf:"varint,4,opt,name=finish,proto3" json:"finish,omitempty"`
	// elapsed_time
	ElapsedTime int64 `protobuf:"varint,5,opt,name=elapsed_time,json=elapsedTime,proto3" json:"elapsed_time,omitempty"`
	// employee_id
	EmployeeId string `protobuf:"bytes,6,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// active_time_slice_id
	ActiveTimeSliceId string `protobuf:"bytes,7,opt,name=active_time_slice_id,json=activeTimeSliceId,proto3" json:"active_time_slice_id,omitempty"`
	// id
	Id string `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
	// comment
	Comment string `protobuf:"bytes,9,opt,name=comment,proto3" json:"comment,omitempty"`
	// last_updated
	LastUpdated int64 `protobuf:"varint,10,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// last_updated_by
	LastUpdatedBy string `protobuf:"bytes,11,opt,name=last_updated_by,json=lastUpdatedBy,proto3" json:"last_updated_by,omitempty"`
	// version
	Version int32 `protobuf:"varint,12,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Timer) Reset() {
	*x = Timer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timers_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timer) ProtoMessage() {}

func (x *Timer) ProtoReflect() protoreflect.Message {
	mi := &file_timers_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timer.ProtoReflect.Descriptor instead.
func (*Timer) Descriptor() ([]byte, []int) {
	return file_timers_proto_rawDescGZIP(), []int{22}
}

func (x *Timer) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *Timer) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *Timer) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Timer) GetFinish() int64 {
	if x != nil {
		return x.Finish
	}
	return 0
}

func (x *Timer) GetElapsedTime() int64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

func (x *Timer) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *Timer) GetActiveTimeSliceId() string {
	if x != nil {
		return x.ActiveTimeSliceId
	}
	return ""
}

func (x *Timer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Timer) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Timer) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *Timer) GetLastUpdatedBy() string {
	if x != nil {
		return x.LastUpdatedBy
	}
	return ""
}

func (x *Timer) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

var File_timers_proto protoreflect.FileDescriptor

var file_timers_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x73, 0x22, 0x5b, 0x0a, 0x12, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x22,
	0x46, 0x0a, 0x13, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67,
	0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x22, 0x22, 0x0a, 0x10, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x22, 0x6b, 0x0a, 0x12, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x46,
	0x0a, 0x13, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52,
	0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x22, 0x24, 0x0a, 0x12, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x47, 0x0a, 0x12,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x06, 0x74,
	0x69, 0x6d, 0x65, 0x72, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x12, 0x54, 0x69,
	0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x22, 0x22, 0x0a, 0x10, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x5f, 0x62,
	0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x12, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x42, 0x0e, 0x0a, 0x0c, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x46, 0x0a, 0x13, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x19, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x1a, 0x54, 0x69,
	0x6d, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75,
	0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x13, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x22, 0x47, 0x0a, 0x14, 0x54, 0x69,
	0x6d, 0x65, 0x72, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x05, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x22, 0xdd, 0x01, 0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x08, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x08, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x11,
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x6f,
	0x66, 0x42, 0x10, 0x0a, 0x0e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x22, 0x80, 0x02, 0x0a, 0x0c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x42, 0x11, 0x0a, 0x0f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x10,
	0x0a, 0x0e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66,
	0x42, 0x13, 0x0a, 0x11, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x5f,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x0f, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x42, 0x0e, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xf3, 0x02, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6c, 0x61, 0x70,
	0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x6c, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x8e, 0x06, 0x0a,
	0x06, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x12, 0x61, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75,
	0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x12, 0x24, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c,
	0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75,
	0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x12, 0x25, 0x2e, 0x67, 0x6f, 0x5f, 0x62,
	0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x67, 0x6f, 0x5f,
	0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x25, 0x2e, 0x67,
	0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x24, 0x2e, 0x67, 0x6f,
	0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x2e, 0x67, 0x6f, 0x5f,
	0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x6f, 0x5f, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x39, 0x5a,
	0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x74, 0x6f,
	0x6e, 0x69, 0x6f, 0x2d, 0x61, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x67, 0x6f,
	0x2d, 0x62, 0x6c, 0x75, 0x64, 0x67, 0x65, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x73,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_timers_proto_rawDescOnce sync.Once
	file_timers_proto_rawDescData = file_timers_proto_rawDesc
)

func file_timers_proto_rawDescGZIP() []byte {
	file_timers_proto_rawDescOnce.Do(func() {
		file_timers_proto_rawDescData = protoimpl.X.CompressGZIP(file_timers_proto_rawDescData)
	})
	return file_timers_proto_rawDescData
}

var file_timers_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_timers_proto_goTypes = []interface{}{
	(*TimerCreateRequest)(nil),         // 0: go_bludgeon_timers.TimerCreateRequest
	(*TimerCreateResponse)(nil),        // 1: go_bludgeon_timers.TimerCreateResponse
	(*TimerReadRequest)(nil),           // 2: go_bludgeon_timers.TimerReadRequest
	(*TimerReadResponse)(nil),          // 3: go_bludgeon_timers.TimerReadResponse
	(*TimerUpdateRequest)(nil),         // 4: go_bludgeon_timers.TimerUpdateRequest
	(*TimerUpdateResponse)(nil),        // 5: go_bludgeon_timers.TimerUpdateResponse
	(*TimerDeleteRequest)(nil),         // 6: go_bludgeon_timers.TimerDeleteRequest
	(*TimerDeleteResponse)(nil),        // 7: go_bludgeon_timers.TimerDeleteResponse
	(*TimersReadRequest)(nil),          // 8: go_bludgeon_timers.TimersReadRequest
	(*TimersReadResponse)(nil),         // 9: go_bludgeon_timers.TimersReadResponse
	(*TimerStartRequest)(nil),          // 10: go_bludgeon_timers.TimerStartRequest
	(*TimerStartResponse)(nil),         // 11: go_bludgeon_timers.TimerStartResponse
	(*TimerStopRequest)(nil),           // 12: go_bludgeon_timers.TimerStopRequest
	(*TimerStopResponse)(nil),          // 13: go_bludgeon_timers.TimerStopResponse
	(*TimerSubmitRequest)(nil),         // 14: go_bludgeon_timers.TimerSubmitRequest
	(*TimerSubmitResponse)(nil),        // 15: go_bludgeon_timers.TimerSubmitResponse
	(*TimerUpdateCommentRequest)(nil),  // 16: go_bludgeon_timers.TimerUpdateCommentRequest
	(*TimerUpdateCommentResponse)(nil), // 17: go_bludgeon_timers.TimerUpdateCommentResponse
	(*TimerArchiveRequest)(nil),        // 18: go_bludgeon_timers.TimerArchiveRequest
	(*TimerArchiveResponse)(nil),       // 19: go_bludgeon_timers.TimerArchiveResponse
	(*TimerSearch)(nil),                // 20: go_bludgeon_timers.TimerSearch
	(*TimerPartial)(nil),               // 21: go_bludgeon_timers.TimerPartial
	(*Timer)(nil),                      // 22: go_bludgeon_timers.Timer
}
var file_timers_proto_depIdxs = []int32{
	21, // 0: go_bludgeon_timers.TimerCreateRequest.timer_partial:type_name -> go_bludgeon_timers.TimerPartial
	22, // 1: go_bludgeon_timers.TimerCreateResponse.timer:type_name -> go_bludgeon_timers.Timer
	22, // 2: go_bludgeon_timers.TimerReadResponse.timer:type_name -> go_bludgeon_timers.Timer
	21, // 3: go_bludgeon_timers.TimerUpdateRequest.timer_partial:type_name -> go_bludgeon_timers.TimerPartial
	22, // 4: go_bludgeon_timers.TimerUpdateResponse.timer:type_name -> go_bludgeon_timers.Timer
	20, // 5: go_bludgeon_timers.TimersReadRequest.timer_search:type_name -> go_bludgeon_timers.TimerSearch
	22, // 6: go_bludgeon_timers.TimersReadResponse.timers:type_name -> go_bludgeon_timers.Timer
	22, // 7: go_bludgeon_timers.TimerStartResponse.timer:type_name -> go_bludgeon_timers.Timer
	22, // 8: go_bludgeon_timers.TimerStopResponse.timer:type_name -> go_bludgeon_timers.Timer
	22, // 9: go_bludgeon_timers.TimerSubmitResponse.timer:type_name -> go_bludgeon_timers.Timer
	22, // 10: go_bludgeon_timers.TimerUpdateCommentResponse.timer:type_name -> go_bludgeon_timers.Timer
	22, // 11: go_bludgeon_timers.TimerArchiveResponse.timer:type_name -> go_bludgeon_timers.Timer
	0,  // 12: go_bludgeon_timers.Timers.timer_create:input_type -> go_bludgeon_timers.TimerCreateRequest
	2,  // 13: go_bludgeon_timers.Timers.timer_read:input_type -> go_bludgeon_timers.TimerReadRequest
	6,  // 14: go_bludgeon_timers.Timers.timer_delete:input_type -> go_bludgeon_timers.TimerDeleteRequest
	8,  // 15: go_bludgeon_timers.Timers.timers_read:input_type -> go_bludgeon_timers.TimersReadRequest
	4,  // 16: go_bludgeon_timers.Timers.timer_update:input_type -> go_bludgeon_timers.TimerUpdateRequest
	10, // 17: go_bludgeon_timers.Timers.timer_start:input_type -> go_bludgeon_timers.TimerStartRequest
	12, // 18: go_bludgeon_timers.Timers.timer_stop:input_type -> go_bludgeon_timers.TimerStopRequest
	14, // 19: go_bludgeon_timers.Timers.timer_submit:input_type -> go_bludgeon_timers.TimerSubmitRequest
	1,  // 20: go_bludgeon_timers.Timers.timer_create:output_type -> go_bludgeon_timers.TimerCreateResponse
	3,  // 21: go_bludgeon_timers.Timers.timer_read:output_type -> go_bludgeon_timers.TimerReadResponse
	7,  // 22: go_bludgeon_timers.Timers.timer_delete:output_type -> go_bludgeon_timers.TimerDeleteResponse
	9,  // 23: go_bludgeon_timers.Timers.timers_read:output_type -> go_bludgeon_timers.TimersReadResponse
	5,  // 24: go_bludgeon_timers.Timers.timer_update:output_type -> go_bludgeon_timers.TimerUpdateResponse
	11, // 25: go_bludgeon_timers.Timers.timer_start:output_type -> go_bludgeon_timers.TimerStartResponse
	13, // 26: go_bludgeon_timers.Timers.timer_stop:output_type -> go_bludgeon_timers.TimerStopResponse
	15, // 27: go_bludgeon_timers.Timers.timer_submit:output_type -> go_bludgeon_timers.TimerSubmitResponse
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_timers_proto_init() }
func file_timers_proto_init() {
	if File_timers_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_timers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimersReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimersReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerStopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerSubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerSubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerUpdateCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerUpdateCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerArchiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerArchiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimerPartial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timers_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_timers_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*TimerSubmitRequest_Finish)(nil),
	}
	file_timers_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*TimerSearch_EmployeeId)(nil),
		(*TimerSearch_Completed)(nil),
		(*TimerSearch_Archived)(nil),
	}
	file_timers_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*TimerPartial_Completed)(nil),
		(*TimerPartial_Archived)(nil),
		(*TimerPartial_EmployeeId)(nil),
		(*TimerPartial_Comment)(nil),
		(*TimerPartial_Finish)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timers_proto_goTypes,
		DependencyIndexes: file_timers_proto_depIdxs,
		MessageInfos:      file_timers_proto_msgTypes,
	}.Build()
	File_timers_proto = out.File
	file_timers_proto_rawDesc = nil
	file_timers_proto_goTypes = nil
	file_timers_proto_depIdxs = nil
}
